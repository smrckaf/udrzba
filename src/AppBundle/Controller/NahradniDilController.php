<?php
/**
 * Created by PhpStorm.
 * Pracovnik: Jáchym
 * Date: 18.11.2018
 * Time: 19:31
 */

namespace AppBundle\Controller;


use AppBundle\Entity\NahradniDil;
use AppBundle\Entity\Stroj;
use AppBundle\Form\UpravitNahradniDilType;
use AppBundle\Manager\UdrzbaManager;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\Form\FormFactoryInterface;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface;

/**
 * @Route("/nahradni-dil")
 */
class NahradniDilController extends Controller
{
    /**
     * @var UdrzbaManager
     */
    private $udrzbaManager;
    /**
     * @var EntityManager
     */
    private $em;

    /**
     * PracovnikController constructor.
     */
    public function __construct(UdrzbaManager $udrzbaManager, EntityManagerInterface $em)
    {
        $this->udrzbaManager = $udrzbaManager;
        $this->em = $em;
    }

    /**
     * @Route("/index/{stroj}", name="nahradni-dil-index")
     */
    public function indexAction(Stroj $stroj)
    {
        $nahradniDily = $this->udrzbaManager->getNahradniDilyByStroj($stroj);
        return $this->render("nahradni_dil/index.html.twig", [
            'nahradniDily' => $nahradniDily,
            'stroj' => $stroj,
        ]);
    }

    /**
     * @Route("/upravit/{nahradniDil}", name="nahradni-dil-upravit")
     */
    public function upravit(FormFactoryInterface $formFactory, Request $request, FlashBagInterface $flashBag, NahradniDil $nahradniDil = null)
    {
        $save_dir = $this->getParameter('nahradni_dily_docs_directory');

        $stroj = $this->em->find(Stroj::class, $request->query->getInt('stroj'));

        if ($nahradniDil === null) {
            $nahradniDil = new NahradniDil($stroj);
            $origDoc = null;
        }
        else {
            $origDoc = $nahradniDil->getDokument();
            $nahradniDil->setDokument($nahradniDil->getDokument() != null ? new File($save_dir . '/' . $nahradniDil->getDokument()) : null);
        }

        $form = $formFactory->create(UpravitNahradniDilType::class, $nahradniDil);
        $form->handleRequest($request);

        if ($form->isValid() && $form->isSubmitted())
        {
            //ukladani souboru
            $jePrvni = $nahradniDil->getDokument() !== null;
            $file = $nahradniDil->getDokument();

            if ($jePrvni)
                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // Move the file to the directory where brochures are stored
            try {
                if ($jePrvni)
                    $file->move($save_dir, $fileName);
            } catch (FileException $e) {
                $flashBag->add('danger', 'Nahrávání dokumentu se nezdařilo. Kontaktujte správce. Chybová zpráva: ' . $e->getMessage());
            }

            if ($jePrvni)
                $nahradniDil->setDokument($fileName);

            if (!$file instanceof UploadedFile)
                $nahradniDil->setDokument($origDoc);

            //odstraneni starych obrazku, prepisujeme-li novymi
            if ($origDoc !== null && $jePrvni)
                $this->removeFile($origDoc);
            //ukladani souboru

            $this->udrzbaManager->ulozitNahradniDil($nahradniDil);
            $flashBag->add('success', 'Náhradní díl byl úspěšně přidán/upraven.');
            return $this->redirectToRoute('nahradni-dil-index', ['stroj' => $stroj->getId()]);
        }
        return $this->render('nahradni_dil/upravit.html.twig', [
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/smazat/{nahradniDil}", name="nahradni-dil-smazat")
     */
    public function smazat(NahradniDil $nahradniDil, FlashBagInterface $flashBag, Request $request)
    {
        $stroj = $this->em->find(Stroj::class, $request->query->getInt('stroj'));

        $this->udrzbaManager->smazatNahradniDil($nahradniDil);
        $flashBag->add('success', 'Náhradní díl byl úspěšně smazán.');

        return $this->redirectToRoute('nahradni-dil-index', ['stroj' => $stroj->getId()]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function removeFile($file)
    {
        $file_path = $this->getParameter('nahradni_dily_docs_directory').'/'.$file;
        if(file_exists($file_path)) unlink($file_path);
    }
}